import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

data = pd.read_csv("data.csv")
print("Original Data Shape:", data.shape)
print(data.head())

if "id" in data.columns:
    data.drop(columns=["id"], inplace=True)

if "diagnosis" in data.columns:
    data["diagnosis"] = data["diagnosis"].map({"M": 1, "B": 0})

if "diagnosis" in data.columns:
    X = data.drop(columns=["diagnosis"])
    true_labels = data["diagnosis"].values
else:
    X = data.copy()
    true_labels = None

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

kmeans = KMeans(n_clusters=2, random_state=42, n_init='auto')
clusters = kmeans.fit_predict(X_scaled)
data["Cluster"] = clusters

if true_labels is not None:
    acc1 = np.mean(clusters == true_labels)
    acc2 = np.mean((1 - clusters) == true_labels)
    best_accuracy = max(acc1, acc2)
    print(f"\nBest Clustering Accuracy: {best_accuracy:.4f}")

pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)
plt.figure(figsize=(10, 6))
sns.scatterplot(x=X_pca[:, 0], y=X_pca[:, 1], hue=clusters, palette="coolwarm", alpha=0.8)
plt.title("K-Means Clustering on Wisconsin Breast Cancer Data (PCA Projection)")
plt.xlabel("Principal Component 1")
plt.ylabel("Principal Component 2")
plt.legend(title="Cluster")
plt.show()
